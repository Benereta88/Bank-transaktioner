Index: etl_proceser.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"id\": \"initial_id\",\r\n   \"metadata\": {\r\n    \"collapsed\": true\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"\"\r\n   ]\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 2\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython2\",\r\n   \"version\": \"2.7.6\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 5\r\n}\r\n
===================================================================
diff --git a/etl_proceser.ipynb b/etl_proceser.ipynb
--- a/etl_proceser.ipynb	(revision 3d82d83e9be334f83b301cff974748a9d3b31c17)
+++ b/etl_proceser.ipynb	(date 1748425916660)
@@ -1,37 +1,25 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "id": "initial_id",
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": [
-    ""
-   ]
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 3",
-   "language": "python",
-   "name": "python3"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 2
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython2",
-   "version": "2.7.6"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 5
-}
+#%%
+import pandas as pd
+import os
+
+print("Aktuell arbetskatalog:", os.getcwd())
+
+
+# Steg 1: Läs in ursprunglig CSV-fil
+df = pd.read_csv("C:\Users\Book\Bank-transaktioner\sebank_customers_with_accounts.csv")
+
+# Steg 2: Transformera data
+# Gruppér efter kunduppgifter och slå ihop bankkonton till en kommaseparerad sträng
+df_cleaned = df.groupby(
+    ['Customer', 'Address', 'Phone', 'Personnummer'],
+    as_index=False
+).agg({
+    'BankAccount': lambda konton: ', '.join(sorted(set(konton)))
+})
+
+# Steg 3: Spara som ny, rensad CSV-fil
+df_cleaned.to_csv("cleaned_customers_with_accounts.csv", index=False)
+
+print("✅ Rensad CSV skapad: 'cleaned_customers_with_accounts.csv'")
+
+#%%
